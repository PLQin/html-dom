(window.webpackJsonp=window.webpackJsonp||[]).push([[18],{"4HIF":function(n,e,a){"use strict";a.r(e);var t=a("q1tI"),s=a.n(t),i=a("mcK/"),m=a("Ov9x"),o=a("2G++");e.default=function(){return s.a.createElement(s.a.Fragment,null,s.a.createElement(m.a,{content:"\n## 将数据从 iframe 发送到父级 window中\n\n~~~ javascript\n// 在 iframe 中调用\nwindow.parent.postMessage(message, '*');\n~~~\n\n`message` 是一个字符串，如果你需要发送多个数据，可以在 JSON 中进行编码: \n\n~~~ javascript\n// 在 iframe 中调用\nconst message = JSON.stringify({\n    message: 'Hello from iframe',\n    date: Date.now(),\n});\nwindow.parent.postMessage(message, '*');\n~~~\n\n## 将数据从页面发送到它的子级 iframe 中\n\n~~~ javascript\n// 在页面中调用\nframeEle.contentWindow.postMessage(message, '*');\n~~~\n\n其中 `frameEle` 表示的是 iframe 元素。\n\n## 接收发送的数据\n\n在 iframe 或主页面中，你可以监听 `message` 事件，接收发送的数据: \n\n~~~ javascript\nwindow.addEventListener('message', function(e) {\n    // 获取发送的数据\n    const data = e.data;\n    \n    // 如果你在发送数据之前使用 JSON 进行编码，\n    // 在这里进行解码\n    // const decoded = JSON.parse(data);\n});\n~~~\n\n> ## 提示\n>\n> 如果您从不同的 iframe 发送或接收消息，可以包含一个参数来指示消息的来源。\n>\n> ~~~ javascript\n> // 来自子级 iframe\n> const message = JSON.stringify({\n>   channel: 'FROM_FRAME_A',\n>   ...\n});\n> window.parent.postMessage(message, '*');\n> ~~~\n>\n> 然后，在主页中，可以通过查看参数来区分消息\n>\n> ~~~ javascript\n> window.addEventListener('message', function(e) {\n>   const data = JSON.parse(e.data);\n>   // 查看消息从哪里来\n>   const channel = data.channel;\n> });\n> ~~~\n\n以下示例演示了如何在[页面](https://github.com/PLQin/html-dom/blob/master/demo/communication-between-an-iframe-and-its-parent-window/index.html)和[子级 iframe](https://github.com/PLQin/html-dom/blob/master/demo/communication-between-an-iframe-and-its-parent-window/iframe.html)之间发送简单消息：\n"}),s.a.createElement(i.a,{src:"/demo/communication-between-an-iframe-and-its-parent-window"}),s.a.createElement(o.a,{slugs:["attach-or-detach-an-event-handler"]}))}}}]);
//# sourceMappingURL=posts-communication-between-an-iframe-and-its-parent-window.8338b388fe1caa32333a.js.map